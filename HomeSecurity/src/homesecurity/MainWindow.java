/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package homesecurity;

import java.io.File;
import java.io.IOException;
import java.math.BigInteger;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author adria
 */
public class MainWindow extends javax.swing.JFrame
{
    public String stringReadFromFileEncryption;
    public String stringReadFromFileDecryption;
    public byte[] bytesReadFromFileEncryption;
    public byte[] bytesReadFromFileDecryption;
    public byte[] encryptedBytes;
    public byte[] decryptedBytes;
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow()
    {
        initComponents();
    }
    
    private void enableEncryptButtonCheck()
    {
        if (!RSAKeyText.getText().isEmpty() && !NKeyText.getText().isEmpty()
                && !encryptTextArea.getText().isEmpty())
        {
            encryptButton.setEnabled(true);
        }
        else
        {
            encryptButton.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        encryptTab = new javax.swing.JPanel();
        encryptTextScrollPane = new javax.swing.JScrollPane();
        encryptTextArea = new javax.swing.JTextArea();
        RSAKeyLabel = new javax.swing.JLabel();
        nLabel = new javax.swing.JLabel();
        RSAKeyText = new javax.swing.JTextField();
        NKeyText = new javax.swing.JTextField();
        encryptButton = new javax.swing.JButton();
        previewLabel = new javax.swing.JLabel();
        chooseFileButton = new javax.swing.JButton();
        decryptTab = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        decryptTextArea = new javax.swing.JTextArea();
        transferTab = new javax.swing.JPanel();
        keyManagementTab = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(700, 480));
        setPreferredSize(new java.awt.Dimension(640, 480));

        encryptTextScrollPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        encryptTextArea.setEditable(false);
        encryptTextArea.setColumns(20);
        encryptTextArea.setRows(5);
        encryptTextScrollPane.setViewportView(encryptTextArea);

        RSAKeyLabel.setText("Chave RSA:");

        nLabel.setText("N:");

        RSAKeyText.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                RSAKeyTextKeyTyped(evt);
            }
        });

        NKeyText.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                NKeyTextKeyTyped(evt);
            }
        });

        encryptButton.setText("Criptografar");
        encryptButton.setEnabled(false);
        encryptButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                encryptButtonActionPerformed(evt);
            }
        });

        previewLabel.setText("Pré-visualização");

        chooseFileButton.setText("Escolher arquivo...");
        chooseFileButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                chooseFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout encryptTabLayout = new javax.swing.GroupLayout(encryptTab);
        encryptTab.setLayout(encryptTabLayout);
        encryptTabLayout.setHorizontalGroup(
            encryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(encryptTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(encryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(encryptTextScrollPane)
                    .addGroup(encryptTabLayout.createSequentialGroup()
                        .addGroup(encryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(RSAKeyLabel)
                            .addComponent(nLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(encryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NKeyText, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                            .addComponent(RSAKeyText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(encryptButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(encryptTabLayout.createSequentialGroup()
                        .addComponent(previewLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chooseFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        encryptTabLayout.setVerticalGroup(
            encryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, encryptTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(encryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(previewLabel)
                    .addComponent(chooseFileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(encryptTextScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(encryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(encryptTabLayout.createSequentialGroup()
                        .addGroup(encryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RSAKeyLabel)
                            .addComponent(RSAKeyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(encryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nLabel)
                            .addComponent(NKeyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(encryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        jTabbedPane1.addTab("Criptografar", encryptTab);

        jScrollPane2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        decryptTextArea.setEditable(false);
        decryptTextArea.setColumns(20);
        decryptTextArea.setRows(5);
        jScrollPane2.setViewportView(decryptTextArea);

        javax.swing.GroupLayout decryptTabLayout = new javax.swing.GroupLayout(decryptTab);
        decryptTab.setLayout(decryptTabLayout);
        decryptTabLayout.setHorizontalGroup(
            decryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 695, Short.MAX_VALUE)
            .addGroup(decryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(decryptTabLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        decryptTabLayout.setVerticalGroup(
            decryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 382, Short.MAX_VALUE)
            .addGroup(decryptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(decryptTabLayout.createSequentialGroup()
                    .addGap(61, 61, 61)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(41, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Decriptografar", decryptTab);

        javax.swing.GroupLayout transferTabLayout = new javax.swing.GroupLayout(transferTab);
        transferTab.setLayout(transferTabLayout);
        transferTabLayout.setHorizontalGroup(
            transferTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 695, Short.MAX_VALUE)
        );
        transferTabLayout.setVerticalGroup(
            transferTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 382, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Transmitir", transferTab);

        javax.swing.GroupLayout keyManagementTabLayout = new javax.swing.GroupLayout(keyManagementTab);
        keyManagementTab.setLayout(keyManagementTabLayout);
        keyManagementTabLayout.setHorizontalGroup(
            keyManagementTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 695, Short.MAX_VALUE)
        );
        keyManagementTabLayout.setVerticalGroup(
            keyManagementTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 382, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Gerenciamento de chaves", keyManagementTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 70, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void encryptButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_encryptButtonActionPerformed
    {//GEN-HEADEREND:event_encryptButtonActionPerformed
        // Add encryption here
        String inputKey;
        String inputN;
        BigInteger bigIntegerKey;
        BigInteger bigIntegerN;
        
        inputKey = RSAKeyText.getText();
        System.out.println("Input key is: " + inputKey);
        
        inputN = NKeyText.getText();
        System.out.println("Input n is: " + inputN);
        
        if (inputKey.isEmpty() || inputN.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Especifique uma chave RSA e o parâmetro N", "Campos não preenchidos", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        /* RSA Encryption section */
        
        try { bigIntegerKey = new BigInteger(inputKey); }
        catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Chave RSA com formato incorreto (não é um número)", "Parâmetro incorreto", JOptionPane.ERROR_MESSAGE);
            return;
        }
          
        try { bigIntegerN = new BigInteger(inputN); }
        catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Parâmetro N com formato incorreto (não é um número)", "Parâmetro incorreto", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        RSAKey key = new RSAKey(bigIntegerKey, bigIntegerN);
        /* End of RSA encryption section
        
        /*JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setDialogTitle("Salvar como");
        fileChooser.setFileFilter(new TextFileFilter());
        int resultado = fileChooser.showSaveDialog(this);

        if (resultado == JFileChooser.CANCEL_OPTION)
        {
            return;
        }

        File chosenFile = fileChooser.getSelectedFile();

        if(chosenFile.getName().equals(""))
        {
            JOptionPane.showMessageDialog(this, "Nome inválido", "Nome inválido", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String pathToWrite = chosenFile.getAbsolutePath() + ".txt";
        System.out.println("Chosen file to write: " + pathToWrite);
        */
        
        /*try 
        {
            TextWriter.writeOnFile(pathToWrite, encryptedBytes);
        } 
        catch (IOException ex) 
        {
            JOptionPane.showMessageDialog(this, "Erro", "Não foi possível criar o arquivo", JOptionPane.ERROR_MESSAGE);
        }*/
    }//GEN-LAST:event_encryptButtonActionPerformed

    private void chooseFileButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_chooseFileButtonActionPerformed
    {//GEN-HEADEREND:event_chooseFileButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setDialogTitle("Abrir arquivo");
        fileChooser.setFileFilter(new TextFileFilter());
        int resultado = fileChooser.showOpenDialog(this);

        if (resultado == JFileChooser.CANCEL_OPTION)
        {
            return;
        }

        File chosenFile = fileChooser.getSelectedFile();

        if(chosenFile == null || chosenFile.getName().equals(""))
        {
            JOptionPane.showMessageDialog(this, "Nome inválido", "Nome inválido", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String path = chosenFile.getAbsolutePath();
        System.out.println("File path: " + path);
        
        if (!chosenFile.exists()) return;

        try 
        {
            bytesReadFromFileEncryption = TextReader.readFile(path);
            stringReadFromFileEncryption = new String(bytesReadFromFileEncryption);
            
            System.out.println("String read from file: ");
            System.out.println(stringReadFromFileEncryption);
            
            encryptTextArea.setText(stringReadFromFileEncryption);
            
            enableEncryptButtonCheck();
        } 
        catch (IOException ex) 
        {
            JOptionPane.showMessageDialog(this, "Não foi possível abrir o arquivo", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_chooseFileButtonActionPerformed

    private void RSAKeyTextKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_RSAKeyTextKeyTyped
    {//GEN-HEADEREND:event_RSAKeyTextKeyTyped
        enableEncryptButtonCheck();
    }//GEN-LAST:event_RSAKeyTextKeyTyped

    private void NKeyTextKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_NKeyTextKeyTyped
    {//GEN-HEADEREND:event_NKeyTextKeyTyped
        enableEncryptButtonCheck();
    }//GEN-LAST:event_NKeyTextKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            /*for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }*/
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NKeyText;
    private javax.swing.JLabel RSAKeyLabel;
    private javax.swing.JTextField RSAKeyText;
    private javax.swing.JButton chooseFileButton;
    private javax.swing.JPanel decryptTab;
    private javax.swing.JTextArea decryptTextArea;
    private javax.swing.JButton encryptButton;
    private javax.swing.JPanel encryptTab;
    private javax.swing.JTextArea encryptTextArea;
    private javax.swing.JScrollPane encryptTextScrollPane;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel keyManagementTab;
    private javax.swing.JLabel nLabel;
    private javax.swing.JLabel previewLabel;
    private javax.swing.JPanel transferTab;
    // End of variables declaration//GEN-END:variables
}
